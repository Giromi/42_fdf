!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APPKIT	makefile	/^APPKIT			= AppKit$/;"	m
AR	makefile	/^AR 				= ar$/;"	m
ARFLAGS	libft/Makefile	/^ARFLAGS = rcus$/;"	m
ARFLAGS	makefile	/^ARFLAGS 		= -rcus$/;"	m
ATLAS_NB_CHAR	minilibx_mms_20191025_beta/mlx_string_put.c	/^#define ATLAS_NB_CHAR /;"	d	file:
ATLAS_NB_CHAR	minilibx_mms_20210621/mlx_string_put.c	/^#define ATLAS_NB_CHAR /;"	d	file:
BONUS_SRCS	makefile	/^BONUS_SRCS		=	push_swap_bonus.c				\\$/;"	m
BONUS_SRCS_FILES	libft/Makefile	/^BONUS_SRCS_FILES = ft_lstnew.c			\\$/;"	m
BUFFER_SIZE	libft/libft.h	/^#  define BUFFER_SIZE /;"	d
CC	libft/Makefile	/^CC = cc$/;"	m
CC	makefile	/^CC 				= cc$/;"	m
CC	minilibx/Makefile.mk	/^CC	= gcc$/;"	m
CC	minilibx/test/Makefile.mk	/^CC=gcc$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	makefile	/^CFLAGS 			= -Wall -Wextra -Werror$/;"	m
CFLAGS	minilibx/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	minilibx/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I..$/;"	m
CFLAGS	minilibx_mms_20210621/Makefile	/^CFLAGS=-O3$/;"	m
COMPILE	makefile	/^COMPILE			= -c$/;"	m
C_OBJ	minilibx_mms_20191025_beta/Makefile	/^C_OBJ=$(C_SRC:.c=.o)$/;"	m
C_OBJ	minilibx_mms_20210621/Makefile	/^C_OBJ=$(C_SRC:.c=.o)$/;"	m
C_SRC	minilibx_mms_20191025_beta/Makefile	/^C_SRC= mlx_xpm.c mlx_png.c mlx_string_put.c$/;"	m
C_SRC	minilibx_mms_20210621/Makefile	/^C_SRC= mlx_xpm.c mlx_png.c mlx_string_put.c$/;"	m
DOCP	minilibx/Makefile.mk	/^DOCP	=%%%%$/;"	m
ENV_DISPLAY	minilibx/mlx_int.h	/^#define	ENV_DISPLAY	/;"	d
ERR_DATA_FILTER	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_DATA_FILTER	/;"	d	file:
ERR_DATA_FILTER	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_DATA_FILTER	/;"	d	file:
ERR_DATA_MISMATCH	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_DATA_MISMATCH	/;"	d	file:
ERR_DATA_MISMATCH	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_DATA_MISMATCH	/;"	d	file:
ERR_MAGIC_SIZE	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_MAGIC_SIZE	/;"	d	file:
ERR_MAGIC_SIZE	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_MAGIC_SIZE	/;"	d	file:
ERR_MAGIC_WRONG	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_MAGIC_WRONG	/;"	d	file:
ERR_MAGIC_WRONG	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_MAGIC_WRONG	/;"	d	file:
ERR_MALLOC	minilibx_mms_20210621/mlx_png.c	/^#define ERR_MALLOC	/;"	d	file:
ERR_NO_TRUECOLOR	minilibx/mlx_int.h	/^#define	ERR_NO_TRUECOLOR	/;"	d
ERR_STRUCT_CRC	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_CRC	/;"	d	file:
ERR_STRUCT_CRC	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_CRC	/;"	d	file:
ERR_STRUCT_DAT	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_DAT	/;"	d	file:
ERR_STRUCT_DAT	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_DAT	/;"	d	file:
ERR_STRUCT_END	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_END	/;"	d	file:
ERR_STRUCT_END	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_END	/;"	d	file:
ERR_STRUCT_HDR	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_HDR	/;"	d	file:
ERR_STRUCT_HDR	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_HDR	/;"	d	file:
ERR_STRUCT_INCIMPL	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_INCIMPL /;"	d	file:
ERR_STRUCT_INCIMPL	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_INCIMPL /;"	d	file:
ERR_STRUCT_INCOMPLETE	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_INCOMPLETE	/;"	d	file:
ERR_STRUCT_INCOMPLETE	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_INCOMPLETE	/;"	d	file:
ERR_STRUCT_MISSCHK	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_STRUCT_MISSCHK	/;"	d	file:
ERR_STRUCT_MISSCHK	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_STRUCT_MISSCHK	/;"	d	file:
ERR_ZLIB	minilibx_mms_20191025_beta/mlx_png.c	/^#define	ERR_ZLIB	/;"	d	file:
ERR_ZLIB	minilibx_mms_20210621/mlx_png.c	/^#define	ERR_ZLIB	/;"	d	file:
FDF_H	srcs/fdf.h	/^# define FDF_H$/;"	d
FONT_HEIGHT	minilibx_macos/mlx_int.h	/^#define	FONT_HEIGHT	/;"	d
FONT_WIDTH	minilibx_macos/mlx_int.h	/^#define FONT_WIDTH	/;"	d
FONT_WIDTH	minilibx_mms_20191025_beta/mlx_string_put.c	/^#define FONT_WIDTH	/;"	d	file:
FONT_WIDTH	minilibx_mms_20210621/mlx_string_put.c	/^#define FONT_WIDTH	/;"	d	file:
HADS	makefile	/^HADS			=	$(MANDATORY_DIR)push_swap.h$/;"	m
HE	srcs/test.c	/^#define HE /;"	d	file:
HEIGHT	srcs/fdf.h	/^# define HEIGHT	/;"	d
HT	minilibx/Makefile.mk	/^HT	=%%%%$/;"	m
IM1_SX	minilibx/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	minilibx/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	minilibx/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	minilibx/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	libft/Makefile	/^INC = -I.\/$/;"	m
INC	makefile	/^INC 			= -I$/;"	m
INC	minilibx/Makefile.mk	/^INC	=%%%%$/;"	m
INC	minilibx/test/Makefile.mk	/^INC=%%%%$/;"	m
INC	minilibx_mms_20191025_beta/Makefile	/^INC=-I.$/;"	m
INC	minilibx_mms_20210621/Makefile	/^INC=-I.$/;"	m
INCLIB	minilibx/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDES	libft/Makefile	/^INCLUDES = .\/libft.h$/;"	m
INCS_DIR	makefile	/^INCS_DIR 		= incs\/$/;"	m
LIBFT	makefile	/^LIBFT 			=	libft.a$/;"	m
LIBFT_DIR	makefile	/^LIBFT_DIR 		=	libft\/$/;"	m
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LOCALHOST	minilibx/mlx_int.h	/^#define	LOCALHOST	/;"	d
MAKE_C	makefile	/^MAKE_C 			= make -C$/;"	m
MANDA_SRCS	makefile	/^MANDA_SRCS		=	example_isometric.c \\$/;"	m
MAX_EVENT	minilibx_macos/mlx_int.h	/^#define	MAX_EVENT	/;"	d
MAX_PIXEL_NB	minilibx_macos/mlx_int.h	/^#define MAX_PIXEL_NB	/;"	d
MLX	makefile	/^MLX 			= mlx$/;"	m
MLXFLAGS	makefile	/^MLXFLAGS		= -l$(MLX) -framework $(APPKIT) -framework $(OPENGL)$/;"	m
MLX_AR	makefile	/^MLX_AR 			= libmlx.dylib$/;"	m
MLX_DIR	makefile	/^MLX_DIR 		= minilibx_mms_20210621\/$/;"	m
MLX_H	minilibx/mlx.h	/^#define	MLX_H$/;"	d
MLX_H	minilibx_macos/mlx.h	/^#define	MLX_H$/;"	d
MLX_H	minilibx_mms_20191025_beta/mlx.h	/^#define	MLX_H$/;"	d
MLX_H	minilibx_mms_20210621/mlx.h	/^#define	MLX_H$/;"	d
MLX_MAX_EVENT	minilibx/mlx_int.h	/^#define	MLX_MAX_EVENT	/;"	d
MLX_SYNC_IMAGE_WRITABLE	minilibx_mms_20210621/mlx.h	/^#define MLX_SYNC_IMAGE_WRITABLE	/;"	d
MLX_SYNC_WIN_CMD_COMPLETED	minilibx_mms_20210621/mlx.h	/^#define MLX_SYNC_WIN_CMD_COMPLETED	/;"	d
MLX_SYNC_WIN_FLUSH_CMD	minilibx_mms_20210621/mlx.h	/^#define MLX_SYNC_WIN_FLUSH_CMD	/;"	d
MLX_TYPE_SHM	minilibx/mlx_int.h	/^#define	MLX_TYPE_SHM	/;"	d
MLX_TYPE_SHM_PIXMAP	minilibx/mlx_int.h	/^#define	MLX_TYPE_SHM_PIXMAP	/;"	d
MLX_TYPE_XIMAGE	minilibx/mlx_int.h	/^#define	MLX_TYPE_XIMAGE	/;"	d
MODULE_OBJ	minilibx_mms_20191025_beta/Makefile	/^MODULE_OBJ=$(MODULE_SRC:.swift=.swiftmodule)$/;"	m
MODULE_OBJ	minilibx_mms_20210621/Makefile	/^MODULE_OBJ=$(MODULE_SRC:.swift=.swiftmodule)$/;"	m
MODULE_SRC	minilibx_mms_20191025_beta/Makefile	/^MODULE_SRC= mlx_image.swift mlx_window.swift mlx_init.swift$/;"	m
MODULE_SRC	minilibx_mms_20210621/Makefile	/^MODULE_SRC= mlx_image.swift mlx_window.swift mlx_init.swift$/;"	m
NAME	libft/Makefile	/^NAME = .\/libft.a$/;"	m
NAME	makefile	/^NAME	 		=	fdf$/;"	m
NAME	minilibx/Makefile.mk	/^NAME	= libmlx.a$/;"	m
NAME	minilibx/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME	minilibx_mms_20191025_beta/Makefile	/^NAME=libmlx.dylib$/;"	m
NAME	minilibx_mms_20210621/Makefile	/^NAME=libmlx.dylib$/;"	m
NOM	minilibx_macos/Makefile	/^NOM=libmlx.a$/;"	m
OBJ	minilibx/Makefile.mk	/^OBJ	=$(SRC:.c=.o)$/;"	m
OBJ	minilibx/test/Makefile.mk	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	minilibx_macos/Makefile	/^OBJ=$(OBJ1:.m=.o)$/;"	m
OBJ	minilibx_mms_20191025_beta/Makefile	/^OBJ=$(SRC:.swift=.o)$/;"	m
OBJ	minilibx_mms_20210621/Makefile	/^OBJ=$(SRC:.swift=.o)$/;"	m
OBJ1	minilibx_macos/Makefile	/^OBJ1=$(SRC:.c=.o)$/;"	m
OBJS	libft/Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
OBJS	makefile	/^OBJS			=	$(addprefix $(SRCS_DIR), $(MANDA_SRCS:.c=.o))$/;"	m
OPENGL	makefile	/^OPENGL			= OpenGL$/;"	m
PNG_HDR_SIZE	minilibx_mms_20191025_beta/mlx_png.c	/^#define PNG_HDR_SIZE	/;"	d	file:
PNG_HDR_SIZE	minilibx_mms_20210621/mlx_png.c	/^#define PNG_HDR_SIZE	/;"	d	file:
PNG_MAGIC_SIZE	minilibx_mms_20191025_beta/mlx_png.c	/^#define	PNG_MAGIC_SIZE	/;"	d	file:
PNG_MAGIC_SIZE	minilibx_mms_20210621/mlx_png.c	/^#define	PNG_MAGIC_SIZE	/;"	d	file:
RETURN	minilibx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RETURN	minilibx_macos/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RETURN	minilibx_mms_20191025_beta/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RETURN	minilibx_mms_20210621/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RM	libft/Makefile	/^RM = rm -rvf$/;"	m
RM	makefile	/^RM 				= rm -vf$/;"	m
SRC	minilibx/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	minilibx/test/Makefile.mk	/^SRC = main.c$/;"	m
SRC	minilibx_macos/Makefile	/^SRC= mlx_shaders.c mlx_new_window.m mlx_init_loop.m mlx_new_image.m mlx_xpm.c mlx_int_str_to_wordtab.c$/;"	m
SRC	minilibx_mms_20191025_beta/Makefile	/^SRC= interface.swift $(MODULE_SRC)$/;"	m
SRC	minilibx_mms_20210621/Makefile	/^SRC= interface.swift $(MODULE_SRC)$/;"	m
SRCS	libft/Makefile	/^SRCS = $(SRCS_FILES)$/;"	m
SRCS_DIR	makefile	/^SRCS_DIR 		= srcs\/$/;"	m
SRCS_FILES	libft/Makefile	/^SRCS_FILES = ft_isalpha.c	\\$/;"	m
TARGET_DIR	makefile	/^TARGET_DIR 		= $(MANDATORY_DIR)$/;"	m
UNIQ_BPP	minilibx_macos/mlx_int.h	/^#define UNIQ_BPP	/;"	d
UNIQ_BPP	minilibx_mms_20191025_beta/mlx_png.c	/^#define UNIQ_BPP /;"	d	file:
UNIQ_BPP	minilibx_mms_20210621/mlx_png.c	/^#define UNIQ_BPP /;"	d	file:
WARN_SHM_ATTACH	minilibx/mlx_int.h	/^#define	WARN_SHM_ATTACH	/;"	d
WIDTH	srcs/fdf.h	/^# define WIDTH	/;"	d
WIN1_SX	minilibx/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	minilibx/test/main.c	/^#define	WIN1_SY	/;"	d	file:
X_ShmAttach	minilibx/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
Z_CHUNK	minilibx_mms_20191025_beta/mlx_png.c	/^#define	Z_CHUNK	/;"	d	file:
Z_CHUNK	minilibx_mms_20210621/mlx_png.c	/^#define	Z_CHUNK	/;"	d	file:
addr	srcs/example_translation_scale.c	/^	char	*addr;$/;"	m	struct:s_data	file:
addr	srcs/exmaple_mlx.c	/^	char	*addr;$/;"	m	struct:s_data	file:
addr	srcs/main.c	/^	char	*addr;$/;"	m	struct:s_data	file:
addr	srcs/parcing.c	/^	char	*addr;$/;"	m	struct:s_data	file:
appid	minilibx_macos/mlx_int.h	/^  void			*appid;$/;"	m	struct:mlx_ptr_s
bits_per_pixel	srcs/example_translation_scale.c	/^	int		bits_per_pixel;$/;"	m	struct:s_data	file:
bits_per_pixel	srcs/exmaple_mlx.c	/^	int		bits_per_pixel;$/;"	m	struct:s_data	file:
bits_per_pixel	srcs/main.c	/^	int		bits_per_pixel;$/;"	m	struct:s_data	file:
bits_per_pixel	srcs/parcing.c	/^	int		bits_per_pixel;$/;"	m	struct:s_data	file:
bpp	minilibx/mlx_int.h	/^  int		bpp;$/;"	m	struct:s_img
bpp	minilibx_mms_20191025_beta/mlx_png.c	/^  int		bpp;$/;"	m	struct:png_info_s	file:
bpp	minilibx_mms_20210621/mlx_png.c	/^  int		bpp;$/;"	m	struct:png_info_s	file:
bpp1	minilibx/test/main.c	/^int	bpp1;$/;"	v
bpp2	minilibx/test/main.c	/^int	bpp2;$/;"	v
bpp3	minilibx/test/main.c	/^int	bpp3;$/;"	v
bpp4	minilibx/test/main.c	/^int	bpp4;$/;"	v
buffer	minilibx_macos/mlx_int.h	/^  char			*buffer;$/;"	m	struct:mlx_img_list_s
bytes_per_pixel	minilibx_macos/font.c	/^  unsigned int 	 bytes_per_pixel; \/* 2:RGB16, 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anon3	file:
bytes_per_pixel	minilibx_mms_20191025_beta/font.c	/^  unsigned int 	 bytes_per_pixel; \/* 2:RGB16, 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anon2	file:
bytes_per_pixel	minilibx_mms_20210621/font.c	/^  unsigned int 	 bytes_per_pixel; \/* 2:RGB16, 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anon1	file:
check_size	libft/ft_strtrim.c	/^static size_t	check_size(char const *s, char const *set, size_t *idx,$/;"	f	file:
cmap	minilibx/mlx_int.h	/^  Colormap	cmap;$/;"	m	struct:s_xvar
cmp_set	libft/ft_strtrim.c	/^static size_t	cmp_set(char const *str, char const *set, size_t set_len)$/;"	f	file:
col	minilibx/mlx_int.h	/^  int		col;$/;"	m	struct:s_xpm_col
col	minilibx_macos/mlx_xpm.c	/^  int           col;$/;"	m	struct:s_xpm_col	file:
col	minilibx_mms_20191025_beta/mlx_xpm.c	/^  int           col;$/;"	m	struct:s_xpm_col	file:
col	minilibx_mms_20210621/mlx_xpm.c	/^  int           col;$/;"	m	struct:s_xpm_col	file:
color	minilibx/mlx_int.h	/^  int	color;$/;"	m	struct:s_col_name
color	minilibx_macos/mlx_xpm.c	/^  int   color;$/;"	m	struct:s_col_name	file:
color	minilibx_mms_20191025_beta/mlx_png.c	/^  int		color;$/;"	m	struct:png_info_s	file:
color	minilibx_mms_20191025_beta/mlx_xpm.c	/^  int   color;$/;"	m	struct:s_col_name	file:
color	minilibx_mms_20210621/mlx_png.c	/^  int		color;$/;"	m	struct:png_info_s	file:
color	minilibx_mms_20210621/mlx_xpm.c	/^  int   color;$/;"	m	struct:s_col_name	file:
color_map_1	minilibx/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f
color_map_2	minilibx/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f
content	libft/libft.h	/^	char			*content;$/;"	m	struct:s_list
count_words	libft/ft_split.c	/^static size_t	count_words(char const *str, char c)$/;"	f	file:
crc_table	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned long crc_table[256] = { 0, 0x77073096, 0xee0e612c, 0x990951ba, 0x76dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0xedb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x9b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x1db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x6b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0xf00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x86d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x3b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x4db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0xd6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0xa00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x26d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x5005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0xcb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0xbdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d };$/;"	v
crc_table	minilibx_mms_20210621/mlx_png.c	/^unsigned long crc_table[256] = { 0, 0x77073096, 0xee0e612c, 0x990951ba, 0x76dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0xedb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x9b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x1db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x6b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0xf00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x86d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x3b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x4db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0xd6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0xa00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x26d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x5005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0xcb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0xbdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d };$/;"	v
create_trgb	srcs/example_translation_scale.c	/^int		create_trgb(int t, int r, int g, int b)$/;"	f
create_trgb	srcs/exmaple_mlx.c	/^int		create_trgb(int t, int r, int g, int b)$/;"	f
create_trgb	srcs/main.c	/^int		create_trgb(int t, int r, int g, int b)$/;"	f
create_trgb	srcs/parcing.c	/^int		create_trgb(int t, int r, int g, int b)$/;"	f
data	minilibx/mlx_int.h	/^  char		*data;$/;"	m	struct:s_img
data1	minilibx/test/main.c	/^char	*data1;$/;"	v
data2	minilibx/test/main.c	/^char	*data2;$/;"	v
data3	minilibx/test/main.c	/^char	*data3;$/;"	v
data4	minilibx/test/main.c	/^char	*data4;$/;"	v
decrgb	minilibx/mlx_int.h	/^  int		decrgb[6];$/;"	m	struct:s_xvar
depth	minilibx/mlx_int.h	/^  int		depth;$/;"	m	struct:s_xvar
depth	minilibx_mms_20191025_beta/mlx_png.c	/^  int		depth;$/;"	m	struct:png_info_s	file:
depth	minilibx_mms_20210621/mlx_png.c	/^  int		depth;$/;"	m	struct:png_info_s	file:
display	minilibx/mlx_int.h	/^  Display	*display;$/;"	m	struct:s_xvar
display_log	minilibx_macos/mlx_shaders.c	/^void display_log(GLuint object, void (*param_func)(), void (*getlog_func)())$/;"	f
do_flush	minilibx/mlx_int.h	/^  int		do_flush;$/;"	m	struct:s_xvar
endian	srcs/example_translation_scale.c	/^	int		endian;$/;"	m	struct:s_data	file:
endian	srcs/exmaple_mlx.c	/^	int		endian;$/;"	m	struct:s_data	file:
endian	srcs/main.c	/^	int		endian;$/;"	m	struct:s_data	file:
endian	srcs/parcing.c	/^	int		endian;$/;"	m	struct:s_data	file:
endian1	minilibx/test/main.c	/^int	endian1;$/;"	v
endian2	minilibx/test/main.c	/^int	endian2;$/;"	v
endian3	minilibx/test/main.c	/^int	endian3;$/;"	v
endian4	minilibx/test/main.c	/^int	endian4;$/;"	v
exit_hook	srcs/example_translation_scale.c	/^int exit_hook()$/;"	f
exit_hook	srcs/exmaple_mlx.c	/^int exit_hook()$/;"	f
exit_hook	srcs/main.c	/^int exit_hook()$/;"	f
exit_hook	srcs/parcing.c	/^int exit_hook()$/;"	f
expose_hook	minilibx/mlx_int.h	/^  int			(*expose_hook)();$/;"	m	struct:s_win_list
expose_param	minilibx/mlx_int.h	/^  void			*expose_param;$/;"	m	struct:s_win_list
expose_win1	minilibx/test/main.c	/^int	expose_win1(void *p)$/;"	f
expose_win2	minilibx/test/main.c	/^int	expose_win2(void *p)$/;"	f
font	minilibx_macos/mlx_int.h	/^  mlx_img_list_t	*font;$/;"	m	struct:mlx_ptr_s
font_atlas	minilibx_macos/font.c	/^} font_atlas = {$/;"	v	typeref:struct:__anon3	file:
font_atlas	minilibx_mms_20191025_beta/font.c	/^} font_atlas = {$/;"	v	typeref:struct:__anon2	file:
font_atlas	minilibx_mms_20210621/font.c	/^} font_atlas = {$/;"	v	typeref:struct:__anon1	file:
font_fshader	minilibx_macos/mlx_int.h	/^  GLuint	font_fshader;$/;"	m	struct:glsl_info_s
font_program	minilibx_macos/mlx_int.h	/^  GLuint	font_program;$/;"	m	struct:glsl_info_s
font_vshader	minilibx_macos/mlx_int.h	/^  GLuint	font_vshader;$/;"	m	struct:glsl_info_s
format	minilibx/mlx_int.h	/^  int		format;$/;"	m	struct:s_img
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_error_malloc	libft/ft_split.c	/^static char	**ft_error_malloc(char **str, size_t D2_size)$/;"	f	file:
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_isspace	libft/ft_atoi.c	/^static	int	ft_isspace(int c)$/;"	f	file:
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_lstadd_back	libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f
ft_lstadd_back_last	libft/get_next_line_utils.c	/^t_list	*ft_lstadd_back_last(t_list **lst, t_list *new)$/;"	f
ft_lstadd_front	libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f
ft_lstclear	libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f
ft_lstfclean	libft/get_next_line.c	/^static void	*ft_lstfclean(t_list **lst)$/;"	f	file:
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f
ft_lstlast	libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f
ft_lstnew_str	libft/get_next_line_utils.c	/^t_list	*ft_lstnew_str(char *content)$/;"	f
ft_lstsize	libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strdup	libft/get_next_line_utils.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, char const *src, size_t dstsize)$/;"	f
ft_strlcat_dstlen	libft/get_next_line_utils.c	/^size_t	ft_strlcat_dstlen(char *dst, size_t dst_len, char const *src,$/;"	f
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, char const *src, size_t dstsize)$/;"	f
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strlen_chr_init	libft/get_next_line_utils.c	/^char	*ft_strlen_chr_init(const char *s, int c, size_t *len, int init)$/;"	f
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
func_t	minilibx_macos/mlx_int.h	/^typedef int (*func_t)();$/;"	t
gc	minilibx/mlx_int.h	/^  GC			gc;$/;"	m	struct:s_win_list
gc	minilibx/mlx_int.h	/^  GC		gc;$/;"	m	struct:s_img
gere_mouse	minilibx/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f
get_b	srcs/exmaple_mlx.c	/^int get_b(int trgb)$/;"	f
get_b	srcs/main.c	/^int get_b(int trgb)$/;"	f
get_g	srcs/exmaple_mlx.c	/^int get_g(int trgb)$/;"	f
get_g	srcs/main.c	/^int get_g(int trgb)$/;"	f
get_next_line	libft/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_r	srcs/exmaple_mlx.c	/^int get_r(int trgb)$/;"	f
get_r	srcs/main.c	/^int get_r(int trgb)$/;"	f
get_t	srcs/exmaple_mlx.c	/^int get_t(int trgb)$/;"	f
get_t	srcs/main.c	/^int get_t(int trgb)$/;"	f
glsl_info_s	minilibx_macos/mlx_int.h	/^typedef struct	glsl_info_s$/;"	s
glsl_info_t	minilibx_macos/mlx_int.h	/^} glsl_info_t;$/;"	t	typeref:struct:glsl_info_s
height	minilibx/mlx_int.h	/^  int		height;$/;"	m	struct:s_img
height	minilibx_macos/font.c	/^  unsigned int 	 height;$/;"	m	struct:__anon3	file:
height	minilibx_macos/mlx_int.h	/^  int			height;$/;"	m	struct:mlx_img_list_s
height	minilibx_mms_20191025_beta/font.c	/^  unsigned int 	 height;$/;"	m	struct:__anon2	file:
height	minilibx_mms_20191025_beta/mlx_png.c	/^  unsigned int	height;$/;"	m	struct:png_info_s	file:
height	minilibx_mms_20210621/font.c	/^  unsigned int 	 height;$/;"	m	struct:__anon1	file:
height	minilibx_mms_20210621/mlx_png.c	/^  unsigned int	height;$/;"	m	struct:png_info_s	file:
hook	minilibx/mlx_int.h	/^  int		(*hook)();$/;"	m	struct:s_event_list
hooks	minilibx/mlx_int.h	/^  t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list
im1	minilibx/test/main.c	/^void    *im1;$/;"	v
im2	minilibx/test/main.c	/^void	*im2;$/;"	v
im3	minilibx/test/main.c	/^void	*im3;$/;"	v
im4	minilibx/test/main.c	/^void	*im4;$/;"	v
image	minilibx/mlx_int.h	/^  XImage	*image;$/;"	m	struct:s_img
image_fshader	minilibx_macos/mlx_int.h	/^  GLuint	image_fshader;$/;"	m	struct:glsl_info_s
image_program	minilibx_macos/mlx_int.h	/^  GLuint	image_program;$/;"	m	struct:glsl_info_s
image_vshader	minilibx_macos/mlx_int.h	/^  GLuint	image_vshader;$/;"	m	struct:glsl_info_s
img	minilibx_macos/mlx_int.h	/^  mlx_img_list_t	*img;$/;"	m	struct:mlx_img_ctx_s
img	srcs/example_translation_scale.c	/^	void 	*img;$/;"	m	struct:s_data	file:
img	srcs/exmaple_mlx.c	/^	void 	*img;$/;"	m	struct:s_data	file:
img	srcs/main.c	/^	void 	*img;$/;"	m	struct:s_data	file:
img	srcs/parcing.c	/^	void 	*img;$/;"	m	struct:s_data	file:
img_list	minilibx_macos/mlx_int.h	/^  mlx_img_ctx_t		*img_list;$/;"	m	struct:mlx_win_list_s
img_list	minilibx_macos/mlx_int.h	/^  mlx_img_list_t	*img_list;$/;"	m	struct:mlx_ptr_s
interlace	minilibx_mms_20191025_beta/mlx_png.c	/^  int		interlace;$/;"	m	struct:png_info_s	file:
interlace	minilibx_mms_20210621/mlx_png.c	/^  int		interlace;$/;"	m	struct:png_info_s	file:
itoa_nbr	libft/ft_itoa.c	/^void	itoa_nbr(int n, char *dst, size_t len)$/;"	f
key_hook	minilibx/mlx_int.h	/^  int			(*key_hook)();$/;"	m	struct:s_win_list
key_hook	srcs/example_translation_scale.c	/^int	key_hook(int keycode, t_vars *vars)$/;"	f
key_hook	srcs/exmaple_mlx.c	/^int	key_hook(int keycode, t_vars *vars)$/;"	f
key_hook	srcs/main.c	/^int	key_hook(int keycode, t_vars *vars)$/;"	f
key_hook	srcs/parcing.c	/^int	key_hook(int keycode, t_vars *vars)$/;"	f
key_param	minilibx/mlx_int.h	/^  void			*key_param;$/;"	m	struct:s_win_list
key_win1	minilibx/test/main.c	/^int	key_win1(int key,void *p)$/;"	f
key_win2	minilibx/test/main.c	/^int	key_win2(int key,void *p)$/;"	f
key_win3	minilibx/test/main.c	/^int	key_win3(int key,void *p)$/;"	f
line_check_len	libft/get_next_line.c	/^static ssize_t	line_check_len(int fd, t_list **lst, size_t *len)$/;"	f	file:
line_length	srcs/example_translation_scale.c	/^	int		line_length;$/;"	m	struct:s_data	file:
line_length	srcs/exmaple_mlx.c	/^	int		line_length;$/;"	m	struct:s_data	file:
line_length	srcs/main.c	/^	int		line_length;$/;"	m	struct:s_data	file:
line_length	srcs/parcing.c	/^	int		line_length;$/;"	m	struct:s_data	file:
loc_font_atlassize	minilibx_macos/mlx_int.h	/^  GLint		loc_font_atlassize;$/;"	m	struct:glsl_info_s
loc_font_color	minilibx_macos/mlx_int.h	/^  GLint		loc_font_color;$/;"	m	struct:glsl_info_s
loc_font_posinatlas	minilibx_macos/mlx_int.h	/^  GLint		loc_font_posinatlas;$/;"	m	struct:glsl_info_s
loc_font_posinwin	minilibx_macos/mlx_int.h	/^  GLint		loc_font_posinwin;$/;"	m	struct:glsl_info_s
loc_font_position	minilibx_macos/mlx_int.h	/^  GLint		loc_font_position;$/;"	m	struct:glsl_info_s
loc_font_texture	minilibx_macos/mlx_int.h	/^  GLint		loc_font_texture;$/;"	m	struct:glsl_info_s
loc_font_winhalfsize	minilibx_macos/mlx_int.h	/^  GLint		loc_font_winhalfsize;$/;"	m	struct:glsl_info_s
loc_image_pos	minilibx_macos/mlx_int.h	/^  GLint		loc_image_pos;$/;"	m	struct:glsl_info_s
loc_image_position	minilibx_macos/mlx_int.h	/^  GLint		loc_image_position;$/;"	m	struct:glsl_info_s
loc_image_size	minilibx_macos/mlx_int.h	/^  GLint		loc_image_size;$/;"	m	struct:glsl_info_s
loc_image_texture	minilibx_macos/mlx_int.h	/^  GLint		loc_image_texture;$/;"	m	struct:glsl_info_s
loc_image_winhalfsize	minilibx_macos/mlx_int.h	/^  GLint		loc_image_winhalfsize;$/;"	m	struct:glsl_info_s
loc_pixel_position	minilibx_macos/mlx_int.h	/^  GLint		loc_pixel_position;$/;"	m	struct:glsl_info_s
loc_pixel_texture	minilibx_macos/mlx_int.h	/^  GLint		loc_pixel_texture;$/;"	m	struct:glsl_info_s
loc_pixel_winhalfsize	minilibx_macos/mlx_int.h	/^  GLint		loc_pixel_winhalfsize;$/;"	m	struct:glsl_info_s
local_endian	minilibx/test/main.c	/^int	local_endian;$/;"	v
loop_hook	minilibx/mlx_int.h	/^  int		(*loop_hook)();$/;"	m	struct:s_xvar
loop_hook	minilibx_macos/mlx_int.h	/^  void			(*loop_hook)(void *);$/;"	m	struct:mlx_ptr_s
loop_hook_data	minilibx_macos/mlx_int.h	/^  void			*loop_hook_data;$/;"	m	struct:mlx_ptr_s
loop_param	minilibx/mlx_int.h	/^  void		*loop_param;$/;"	m	struct:s_xvar
loop_timer	minilibx_macos/mlx_int.h	/^  void			*loop_timer;$/;"	m	struct:mlx_ptr_s
magic	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char magic[PNG_MAGIC_SIZE] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v
magic	minilibx_mms_20210621/mlx_png.c	/^unsigned char magic[PNG_MAGIC_SIZE] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v
main	minilibx/test/main.c	/^int	main()$/;"	f
main	minilibx/test/new_win.c	/^int main()$/;"	f
main	srcs/example_translation_scale.c	/^int main(void)$/;"	f
main	srcs/exmaple_mlx.c	/^int main(void)$/;"	f
main	srcs/main.c	/^int main(void)$/;"	f
main	srcs/parcing.c	/^int main()$/;"	f
main	srcs/test.c	/^int main(void)$/;"	f
main_loop_active	minilibx_macos/mlx_int.h	/^  int			main_loop_active;$/;"	m	struct:mlx_ptr_s
make_line	libft/get_next_line.c	/^static char	*make_line(t_list **lst, size_t line_len)$/;"	f	file:
make_max	libft/ft_atoi.c	/^static	size_t	make_max(int sign)$/;"	f	file:
make_ptr	libft/ft_split.c	/^static char	*make_ptr(char const *str, size_t *j, char c)$/;"	f	file:
mask	minilibx/mlx_int.h	/^  int		mask;$/;"	m	struct:s_event_list
mipng_crc	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_crc(unsigned char *ptr, int len)$/;"	f
mipng_crc	minilibx_mms_20210621/mlx_png.c	/^int	mipng_crc(unsigned char *ptr, int len)$/;"	f
mipng_data	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_data(void *img, unsigned char *dat, png_info_t *pi)$/;"	f
mipng_data	minilibx_mms_20210621/mlx_png.c	/^int	mipng_data(void *img, unsigned char *dat, png_info_t *pi)$/;"	f
mipng_defilter	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char (*(mipng_defilter[]))(unsigned char *buff, int pos, int a, int b, int c) =$/;"	v
mipng_defilter	minilibx_mms_20210621/mlx_png.c	/^unsigned char (*(mipng_defilter[]))(unsigned char *buff, int pos, int a, int b, int c) =$/;"	v
mipng_defilter_average	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char mipng_defilter_average(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_average	minilibx_mms_20210621/mlx_png.c	/^unsigned char mipng_defilter_average(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_none	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char mipng_defilter_none(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_none	minilibx_mms_20210621/mlx_png.c	/^unsigned char mipng_defilter_none(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_paeth	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char mipng_defilter_paeth(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_paeth	minilibx_mms_20210621/mlx_png.c	/^unsigned char mipng_defilter_paeth(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_sub	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char mipng_defilter_sub(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_sub	minilibx_mms_20210621/mlx_png.c	/^unsigned char mipng_defilter_sub(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_up	minilibx_mms_20191025_beta/mlx_png.c	/^unsigned char mipng_defilter_up(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_defilter_up	minilibx_mms_20210621/mlx_png.c	/^unsigned char mipng_defilter_up(unsigned char *buff, int pos, int a, int b, int c)$/;"	f
mipng_err	minilibx_mms_20191025_beta/mlx_png.c	/^char *(mipng_err[]) =$/;"	v
mipng_err	minilibx_mms_20210621/mlx_png.c	/^char *(mipng_err[]) =$/;"	v
mipng_fill_img	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_fill_img(void *img, unsigned char *buf, png_info_t *pi)$/;"	f
mipng_fill_img	minilibx_mms_20210621/mlx_png.c	/^int	mipng_fill_img(void *img, unsigned char *buf, png_info_t *pi)$/;"	f
mipng_is_type	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_is_type(unsigned char *ptr, char *type)$/;"	f
mipng_is_type	minilibx_mms_20210621/mlx_png.c	/^int	mipng_is_type(unsigned char *ptr, char *type)$/;"	f
mipng_magic	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_magic(unsigned char *ptr, int size)$/;"	f
mipng_magic	minilibx_mms_20210621/mlx_png.c	/^int	mipng_magic(unsigned char *ptr, int size)$/;"	f
mipng_structure	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_structure(unsigned char *ptr, int size, unsigned char **hdr, unsigned char **dat)$/;"	f
mipng_structure	minilibx_mms_20210621/mlx_png.c	/^int	mipng_structure(unsigned char *ptr, int size, unsigned char **hdr, unsigned char **dat)$/;"	f
mipng_verif_hdr	minilibx_mms_20191025_beta/mlx_png.c	/^int	mipng_verif_hdr(unsigned char *hdr, png_info_t *pi)$/;"	f
mipng_verif_hdr	minilibx_mms_20210621/mlx_png.c	/^int	mipng_verif_hdr(unsigned char *hdr, png_info_t *pi)$/;"	f
mlx	minilibx/test/main.c	/^void	*mlx;$/;"	v
mlx	minilibx/test/new_win.c	/^void *mlx;$/;"	v
mlx	srcs/example_translation_scale.c	/^	void		*mlx;$/;"	m	struct:s_vars	file:
mlx	srcs/exmaple_mlx.c	/^	void		*mlx;$/;"	m	struct:s_vars	file:
mlx	srcs/main.c	/^	void		*mlx;$/;"	m	struct:s_vars	file:
mlx	srcs/parcing.c	/^	void		*mlx;$/;"	m	struct:s_vars	file:
mlx_X_error	minilibx/mlx_new_image.c	/^int	mlx_X_error;$/;"	v
mlx_clear_window	minilibx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_col_name	minilibx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_col_name	minilibx_macos/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_col_name	minilibx_mms_20191025_beta/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_col_name	minilibx_mms_20210621/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_destroy_image	minilibx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f
mlx_destroy_window	minilibx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f
mlx_do_key_autorepeatoff	minilibx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f
mlx_do_key_autorepeaton	minilibx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f
mlx_do_sync	minilibx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f
mlx_expose_hook	minilibx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_flush_event	minilibx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f
mlx_get_color_value	minilibx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f
mlx_get_data_addr	minilibx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f
mlx_hook	minilibx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f
mlx_img_ctx_s	minilibx_macos/mlx_int.h	/^typedef struct	mlx_img_ctx_s$/;"	s
mlx_img_ctx_t	minilibx_macos/mlx_int.h	/^} mlx_img_ctx_t;$/;"	t	typeref:struct:mlx_img_ctx_s
mlx_img_list_s	minilibx_macos/mlx_int.h	/^typedef struct	mlx_img_list_s$/;"	s
mlx_img_list_t	minilibx_macos/mlx_int.h	/^} mlx_img_list_t;$/;"	t	typeref:struct:mlx_img_list_s
mlx_init	minilibx/mlx_init.c	/^void		*mlx_init()$/;"	f
mlx_int_anti_resize_win	minilibx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f
mlx_int_deal_shm	minilibx/mlx_init.c	/^int	mlx_int_deal_shm(t_xvar *xvar)$/;"	f
mlx_int_do_nothing	minilibx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f
mlx_int_egal_img	minilibx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f
mlx_int_file_get_rid_comment	minilibx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_file_get_rid_comment	minilibx_macos/mlx_xpm.c	/^void	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_file_get_rid_comment	minilibx_mms_20191025_beta/mlx_xpm.c	/^void	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_file_get_rid_comment	minilibx_mms_20210621/mlx_xpm.c	/^void	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_fill	minilibx_mms_20191025_beta/mlx_string_put.c	/^void mlx_int_fill(unsigned char *data, int sl)$/;"	f
mlx_int_fill	minilibx_mms_20210621/mlx_string_put.c	/^void mlx_int_fill(unsigned char *data, int sl)$/;"	f
mlx_int_get_col_name	minilibx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_col_name	minilibx_macos/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_col_name	minilibx_mms_20191025_beta/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_col_name	minilibx_mms_20210621/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_good_color	minilibx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f
mlx_int_get_line	minilibx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_line	minilibx_macos/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_line	minilibx_mms_20191025_beta/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_line	minilibx_mms_20210621/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_text_rgb	minilibx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_text_rgb	minilibx_macos/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_text_rgb	minilibx_mms_20191025_beta/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_text_rgb	minilibx_mms_20210621/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_get_visual	minilibx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f
mlx_int_new_image	minilibx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f
mlx_int_new_xshm_image	minilibx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f
mlx_int_param_ButtonPress	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_ButtonRelease	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_Expose	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyPress	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_KeyRelease	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_MotionNotify	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_event	minilibx/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v
mlx_int_param_generic	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f
mlx_int_param_undef	minilibx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f
mlx_int_parse_png	minilibx_mms_20191025_beta/mlx_png.c	/^void	*mlx_int_parse_png(void *xvar, unsigned char *fptr, int size, int *width, int *height)$/;"	f
mlx_int_parse_png	minilibx_mms_20210621/mlx_png.c	/^void	*mlx_int_parse_png(void *xvar, unsigned char *fptr, int size, int *width, int *height)$/;"	f
mlx_int_parse_xpm	minilibx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_parse_xpm	minilibx_macos/mlx_xpm.c	/^void	*mlx_int_parse_xpm(mlx_ptr_t *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_parse_xpm	minilibx_mms_20191025_beta/mlx_xpm.c	/^void	*mlx_int_parse_xpm(void *xvar,void *info,int info_size,char *(*f)(), int *width, int *height)$/;"	f
mlx_int_parse_xpm	minilibx_mms_20210621/mlx_xpm.c	/^void	*mlx_int_parse_xpm(void *xvar,void *info,int info_size,char *(*f)(), int *width, int *height)$/;"	f
mlx_int_rgb_conversion	minilibx/mlx_init.c	/^int	mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f
mlx_int_set_win_event_mask	minilibx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f
mlx_int_static_line	minilibx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_static_line	minilibx_macos/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_static_line	minilibx_mms_20191025_beta/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_static_line	minilibx_mms_20210621/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_str_str	minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str	minilibx_macos/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str	minilibx_mms_20191025_beta/mlx_xpm.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str	minilibx_mms_20210621/mlx_xpm.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx_macos/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx_mms_20191025_beta/mlx_xpm.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx_mms_20210621/mlx_xpm.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_to_wordtab	minilibx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_str_to_wordtab	minilibx_macos/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_str_to_wordtab	minilibx_mms_20191025_beta/mlx_xpm.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_str_to_wordtab	minilibx_mms_20210621/mlx_xpm.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_wait_first_expose	minilibx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f
mlx_int_xpm_f_image	minilibx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f
mlx_int_xpm_set_pixel	minilibx/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f
mlx_int_xpm_set_pixel	minilibx_macos/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(mlx_img_list_t *img, char *data, int opp, int col, int x)$/;"	f
mlx_int_xpm_set_pixel	minilibx_mms_20191025_beta/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(char *data, int opp, int col, int x)$/;"	f
mlx_int_xpm_set_pixel	minilibx_mms_20210621/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(char *data, int opp, int col, int x)$/;"	f
mlx_key_hook	minilibx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_loop	minilibx/mlx_loop.c	/^int		mlx_loop(t_xvar *xvar)$/;"	f
mlx_loop_hook	minilibx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f
mlx_mouse_hook	minilibx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f
mlx_new_image	minilibx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_image2	minilibx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f
mlx_new_window	minilibx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f
mlx_pixel_put	minilibx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_png_file_to_image	minilibx_mms_20191025_beta/mlx_png.c	/^void	*mlx_png_file_to_image(void *xvar, char *file, int *width, int *height)$/;"	f
mlx_png_file_to_image	minilibx_mms_20210621/mlx_png.c	/^void	*mlx_png_file_to_image(void *xvar, char *file, int *width, int *height)$/;"	f
mlx_ptr_s	minilibx_macos/mlx_int.h	/^typedef struct		mlx_ptr_s$/;"	s
mlx_ptr_t	minilibx_macos/mlx_int.h	/^} mlx_ptr_t;$/;"	t	typeref:struct:mlx_ptr_s
mlx_put_image_to_window	minilibx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f
mlx_shaders	minilibx_macos/mlx_shaders.c	/^int mlx_shaders(glsl_info_t *glsl)$/;"	f
mlx_shaders_font	minilibx_macos/mlx_shaders.c	/^int mlx_shaders_font(glsl_info_t *glsl)$/;"	f
mlx_shaders_image	minilibx_macos/mlx_shaders.c	/^int mlx_shaders_image(glsl_info_t *glsl)$/;"	f
mlx_shaders_pixel	minilibx_macos/mlx_shaders.c	/^int mlx_shaders_pixel(glsl_info_t *glsl)$/;"	f
mlx_string_put	minilibx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f
mlx_string_put	minilibx_mms_20191025_beta/mlx_string_put.c	/^int mlx_string_put(void *mlx_ptr, void *win_ptr, int x, int y, int color, char *string)$/;"	f
mlx_string_put	minilibx_mms_20210621/mlx_string_put.c	/^int mlx_string_put(void *mlx_ptr, void *win_ptr, int x, int y, int color, char *string)$/;"	f
mlx_win_list_s	minilibx_macos/mlx_int.h	/^typedef struct	mlx_win_list_s$/;"	s
mlx_win_list_t	minilibx_macos/mlx_int.h	/^} mlx_win_list_t;$/;"	t	typeref:struct:mlx_win_list_s
mlx_xpm_file_to_image	minilibx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f
mlx_xpm_file_to_image	minilibx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_file_to_image	minilibx_macos/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(mlx_ptr_t *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_file_to_image	minilibx_mms_20191025_beta/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(void *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_file_to_image	minilibx_mms_20210621/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(void *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx_macos/mlx_xpm.c	/^void	*mlx_xpm_to_image(mlx_ptr_t *xvar,char **xpm_data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx_mms_20191025_beta/mlx_xpm.c	/^void	*mlx_xpm_to_image(void *xvar,char **xpm_data,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx_mms_20210621/mlx_xpm.c	/^void	*mlx_xpm_to_image(void *xvar,char **xpm_data,int *width,int *height)$/;"	f
mouse_hook	minilibx/mlx_int.h	/^  int			(*mouse_hook)();$/;"	m	struct:s_win_list
mouse_param	minilibx/mlx_int.h	/^  void			*mouse_param;$/;"	m	struct:s_win_list
mouse_win1	minilibx/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f
mouse_win2	minilibx/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f
mouse_win3	minilibx/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f
my_mlx_pixel_put	srcs/example_translation_scale.c	/^void			my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f
my_mlx_pixel_put	srcs/exmaple_mlx.c	/^void			my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f
my_mlx_pixel_put	srcs/main.c	/^void			my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f
my_mlx_pixel_put	srcs/parcing.c	/^void			my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f
name	minilibx/mlx_int.h	/^  char	*name;$/;"	m	struct:s_col_name
name	minilibx/mlx_int.h	/^  int		name;$/;"	m	struct:s_xpm_col
name	minilibx_macos/mlx_xpm.c	/^  char  *name;$/;"	m	struct:s_col_name	file:
name	minilibx_macos/mlx_xpm.c	/^  int           name;$/;"	m	struct:s_xpm_col	file:
name	minilibx_mms_20191025_beta/mlx_xpm.c	/^  char  *name;$/;"	m	struct:s_col_name	file:
name	minilibx_mms_20191025_beta/mlx_xpm.c	/^  int           name;$/;"	m	struct:s_xpm_col	file:
name	minilibx_mms_20210621/mlx_xpm.c	/^  char  *name;$/;"	m	struct:s_col_name	file:
name	minilibx_mms_20210621/mlx_xpm.c	/^  int           name;$/;"	m	struct:s_xpm_col	file:
nb_flush	minilibx_macos/mlx_int.h	/^  int			nb_flush;$/;"	m	struct:mlx_win_list_s
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	minilibx/mlx_int.h	/^  struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list::s_win_list
next	minilibx_macos/mlx_int.h	/^  struct mlx_img_ctx_s	*next;$/;"	m	struct:mlx_img_ctx_s	typeref:struct:mlx_img_ctx_s::mlx_img_ctx_s
next	minilibx_macos/mlx_int.h	/^  struct mlx_img_list_s	*next;$/;"	m	struct:mlx_img_list_s	typeref:struct:mlx_img_list_s::mlx_img_list_s
next	minilibx_macos/mlx_int.h	/^  struct mlx_win_list_s	*next;$/;"	m	struct:mlx_win_list_s	typeref:struct:mlx_win_list_s::mlx_win_list_s
param	minilibx/mlx_int.h	/^  void		*param;$/;"	m	struct:s_event_list
pix	minilibx/mlx_int.h	/^  Pixmap	pix;$/;"	m	struct:s_img
pixel_data	minilibx_macos/font.c	/^  unsigned char	 pixel_data[1140 * 20 * 4 + 1];$/;"	m	struct:__anon3	file:
pixel_data	minilibx_mms_20191025_beta/font.c	/^  unsigned char	 pixel_data[1140 * 20 * 4 + 1];$/;"	m	struct:__anon2	file:
pixel_data	minilibx_mms_20210621/font.c	/^  unsigned char	 pixel_data[1140 * 20 * 4 + 1];$/;"	m	struct:__anon1	file:
pixel_fshader	minilibx_macos/mlx_int.h	/^  GLuint	pixel_fshader;$/;"	m	struct:glsl_info_s
pixel_program	minilibx_macos/mlx_int.h	/^  GLuint	pixel_program;$/;"	m	struct:glsl_info_s
pixel_vshader	minilibx_macos/mlx_int.h	/^  GLuint	pixel_vshader;$/;"	m	struct:glsl_info_s
pixmgt	minilibx_macos/mlx_int.h	/^  int			pixmgt;$/;"	m	struct:mlx_win_list_s
plma_check	libft/ft_atoi.c	/^static	int	plma_check(int c, int *sign_ptr)$/;"	f	file:
png_info_s	minilibx_mms_20191025_beta/mlx_png.c	/^typedef struct png_info_s$/;"	s	file:
png_info_s	minilibx_mms_20210621/mlx_png.c	/^typedef struct png_info_s$/;"	s	file:
png_info_t	minilibx_mms_20191025_beta/mlx_png.c	/^} png_info_t;$/;"	t	typeref:struct:png_info_s	file:
png_info_t	minilibx_mms_20210621/mlx_png.c	/^} png_info_t;$/;"	t	typeref:struct:png_info_s	file:
private_cmap	minilibx/mlx_int.h	/^  int		private_cmap;$/;"	m	struct:s_xvar
pshm_format	minilibx/mlx_int.h	/^  int		pshm_format;$/;"	m	struct:s_xvar
read_check	libft/get_next_line.c	/^static t_list	*read_check(int fd, t_list **lst, ssize_t *rd)$/;"	f	file:
root	minilibx/mlx_int.h	/^  Window	root;$/;"	m	struct:s_xvar
rot_z	srcs/utils.c	/^void rot_z(int *x0, int *y0, int x_base, int y_base, double theta)$/;"	f
s_col_name	minilibx/mlx_int.h	/^struct	s_col_name$/;"	s
s_col_name	minilibx_macos/mlx_xpm.c	/^struct  s_col_name$/;"	s	file:
s_col_name	minilibx_mms_20191025_beta/mlx_xpm.c	/^struct  s_col_name$/;"	s	file:
s_col_name	minilibx_mms_20210621/mlx_xpm.c	/^struct  s_col_name$/;"	s	file:
s_data	srcs/example_translation_scale.c	/^typedef struct s_data$/;"	s	file:
s_data	srcs/exmaple_mlx.c	/^typedef struct s_data$/;"	s	file:
s_data	srcs/main.c	/^typedef struct s_data$/;"	s	file:
s_data	srcs/parcing.c	/^typedef struct s_data$/;"	s	file:
s_event_list	minilibx/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_img	minilibx/mlx_int.h	/^typedef struct	s_img$/;"	s
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
s_vars	srcs/example_translation_scale.c	/^typedef struct	s_vars {$/;"	s	file:
s_vars	srcs/exmaple_mlx.c	/^typedef struct	s_vars {$/;"	s	file:
s_vars	srcs/main.c	/^typedef struct	s_vars {$/;"	s	file:
s_vars	srcs/parcing.c	/^typedef struct	s_vars {$/;"	s	file:
s_win_list	minilibx/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	minilibx/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xpm_col	minilibx_macos/mlx_xpm.c	/^typedef struct  s_xpm_col$/;"	s	file:
s_xpm_col	minilibx_mms_20191025_beta/mlx_xpm.c	/^typedef struct  s_xpm_col$/;"	s	file:
s_xpm_col	minilibx_mms_20210621/mlx_xpm.c	/^typedef struct  s_xpm_col$/;"	s	file:
s_xvar	minilibx/mlx_int.h	/^typedef struct	s_xvar$/;"	s
screen	minilibx/mlx_int.h	/^  int		screen;$/;"	m	struct:s_xvar
shm	minilibx/mlx_int.h	/^  XShmSegmentInfo shm;$/;"	m	struct:s_img
shm_att_pb	minilibx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f
size_line	minilibx/mlx_int.h	/^  int		size_line;$/;"	m	struct:s_img
sl1	minilibx/test/main.c	/^int	sl1;$/;"	v
sl2	minilibx/test/main.c	/^int	sl2;$/;"	v
sl3	minilibx/test/main.c	/^int	sl3;$/;"	v
sl4	minilibx/test/main.c	/^int	sl4;$/;"	v
t_data	srcs/example_translation_scale.c	/^}		t_data;$/;"	t	typeref:struct:s_data	file:
t_data	srcs/exmaple_mlx.c	/^}		t_data;$/;"	t	typeref:struct:s_data	file:
t_data	srcs/main.c	/^}		t_data;$/;"	t	typeref:struct:s_data	file:
t_data	srcs/parcing.c	/^}		t_data;$/;"	t	typeref:struct:s_data	file:
t_event_list	minilibx/mlx_int.h	/^} t_event_list;$/;"	t	typeref:struct:s_event_list
t_img	minilibx/mlx_int.h	/^} t_img;$/;"	t	typeref:struct:s_img
t_list	libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_vars	srcs/example_translation_scale.c	/^}				t_vars;$/;"	t	typeref:struct:s_vars	file:
t_vars	srcs/exmaple_mlx.c	/^}				t_vars;$/;"	t	typeref:struct:s_vars	file:
t_vars	srcs/main.c	/^}				t_vars;$/;"	t	typeref:struct:s_vars	file:
t_vars	srcs/parcing.c	/^}				t_vars;$/;"	t	typeref:struct:s_vars	file:
t_win_list	minilibx/mlx_int.h	/^} t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	minilibx/mlx_int.h	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xpm_col	minilibx_macos/mlx_xpm.c	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col	file:
t_xpm_col	minilibx_mms_20191025_beta/mlx_xpm.c	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col	file:
t_xpm_col	minilibx_mms_20210621/mlx_xpm.c	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col	file:
t_xvar	minilibx/mlx_int.h	/^} t_xvar;$/;"	t	typeref:struct:s_xvar
texture	minilibx_macos/mlx_int.h	/^  GLuint		texture;$/;"	m	struct:mlx_img_ctx_s
type	minilibx/mlx_int.h	/^  int		type;$/;"	m	struct:s_img
use_xshm	minilibx/mlx_int.h	/^  int		use_xshm;$/;"	m	struct:s_xvar
vbuffer	minilibx_macos/mlx_int.h	/^  GLuint		vbuffer;$/;"	m	struct:mlx_img_ctx_s
vertexes	minilibx_macos/mlx_int.h	/^  GLfloat		vertexes[8];$/;"	m	struct:mlx_img_list_s
visual	minilibx/mlx_int.h	/^  Visual	*visual;$/;"	m	struct:s_xvar
width	minilibx/mlx_int.h	/^  int		width;$/;"	m	struct:s_img
width	minilibx_macos/font.c	/^  unsigned int 	 width;$/;"	m	struct:__anon3	file:
width	minilibx_macos/mlx_int.h	/^  int			width;$/;"	m	struct:mlx_img_list_s
width	minilibx_mms_20191025_beta/font.c	/^  unsigned int 	 width;$/;"	m	struct:__anon2	file:
width	minilibx_mms_20191025_beta/mlx_png.c	/^  unsigned int	width;$/;"	m	struct:png_info_s	file:
width	minilibx_mms_20210621/font.c	/^  unsigned int 	 width;$/;"	m	struct:__anon1	file:
width	minilibx_mms_20210621/mlx_png.c	/^  unsigned int	width;$/;"	m	struct:png_info_s	file:
win	srcs/example_translation_scale.c	/^	void		*win;$/;"	m	struct:s_vars	file:
win	srcs/exmaple_mlx.c	/^	void		*win;$/;"	m	struct:s_vars	file:
win	srcs/main.c	/^	void		*win;$/;"	m	struct:s_vars	file:
win	srcs/parcing.c	/^	void		*win;$/;"	m	struct:s_vars	file:
win1	minilibx/test/main.c	/^void	*win1;$/;"	v
win1	minilibx/test/new_win.c	/^void *win1;$/;"	v
win2	minilibx/test/main.c	/^void    *win2;$/;"	v
win2	minilibx/test/new_win.c	/^void *win2;$/;"	v
win3	minilibx/test/main.c	/^void    *win3;$/;"	v
win_list	minilibx/mlx_int.h	/^  t_win_list	*win_list;$/;"	m	struct:s_xvar
win_list	minilibx_macos/mlx_int.h	/^  mlx_win_list_t	*win_list;$/;"	m	struct:mlx_ptr_s
window	minilibx/mlx_int.h	/^  Window		window;$/;"	m	struct:s_win_list
winid	minilibx_macos/mlx_int.h	/^  void			*winid;$/;"	m	struct:mlx_win_list_s
xpm1_x	minilibx/test/main.c	/^int	xpm1_x;$/;"	v
xpm1_y	minilibx/test/main.c	/^int	xpm1_y;$/;"	v
